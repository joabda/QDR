
// Variable definition
orgID = organization.get("organization_id");
estimateID = estimate.get("estimate_id");
// Retrieve the estimate record
estimateResponse = zoho.books.getRecordsByID("Estimates",orgID,estimateID);
updatedEvents = list();
// Check if the estimate was retrieved successfully
if(estimateResponse.get("code") == 0)
{
	estimate = estimateResponse.get("estimate");
	customFields = estimate.get("custom_fields").toList();
	events = customFields.get(0).get("value");
	for each  event in events
	{
		eventId = event.get("id");
		eventResponse = invokeurl
		[
			url :"https://www.googleapis.com/calendar/v3/calendars/829a765c847d9951280c682ade94fa73b0f6bf88ca16a8975537442a1692e979@group.calendar.google.com/events/" + eventId
			type :GET
			headers:{"Content-Type":"application/json"}
			connection:"google_calendar"
		];
		// Construct the body map with the new title
		bodyMap = Map();
		bodyMap.put("summary",event.get("summary").replaceFirst("Stand-by","CONFIRMÃ‰"));
		bodyMap.put("attendees",eventResponse.get("attendees"));
		event.remove("summary");
		event.put("summary", bodyMap.get("summary"));
		updatedEvents.add(event);
		// Make the PUT request to update the event
		updateResponse = invokeurl
		[
			url :"https://www.googleapis.com/calendar/v3/calendars/829a765c847d9951280c682ade94fa73b0f6bf88ca16a8975537442a1692e979@group.calendar.google.com/events/" + event.get("id") + "?sendUpdates=all"
			type :PATCH
			parameters:bodyMap.toString()
			headers:{"Content-Type":"application/json"}
			connection:"google_calendar"
		];
	}
	// Retrieve the current custom fields
	customFields = estimate.get("custom_fields").toList();
	// Modify the specific custom field
	found = false;
	for each  field in customFields
	{
		if(field.get("api_name") == "cf_version")
		{
			field.put("value",updatedEvents);
			found = true;
		}
	}
	if(!found)
	{
		customFields = list();
		mp = Map();
		mp.put("api_name","cf_version");
		mp.put("value",updatedEvents);
		customFields.add(mp);
	}
	// Prepare the update payload for estimates
	updatePayload = Map();
	updatePayload.put("custom_fields",customFields);
	// Set the updated custom fields
	// Update the estimate
	updateResponse = zoho.books.updateRecord("Estimates",orgID,estimateID,updatePayload);
}
